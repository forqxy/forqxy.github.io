<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2023/10/08/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>文章迁移(gradle构建工具)</title>
    <url>/2021/02/01/%E6%96%87%E7%AB%A0%E8%BF%81%E7%A7%BB(gradle%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7)/</url>
    <content><![CDATA[<p><a href="https://imgchr.com/i/yesfCq"><img src="https://s3.ax1x.com/2021/02/01/yesfCq.jpg" alt="gradle学习.jpg"></a></p>
<h1 id="Gradle介绍"><a href="#Gradle介绍" class="headerlink" title="Gradle介绍"></a>Gradle介绍</h1><blockquote>
<p>这是一个基于<code>JVM</code>的富有突破性构建工具.</p>
<ul>
<li>像<code>maven</code>一样的基于约定约定优于配置的构建框架</li>
<li>强大的依赖管理(基于 ApacheIvy)</li>
<li>基于 <code>groovy</code>，其 <code>build</code> 脚本使用 <code>groovy dsl</code> 编写</li>
<li>最重要的一点,配置相关依赖代码量少，不会像maven一样xml过多,一个大型项目,pom.xml看的眼花.</li>
</ul>
</blockquote>
<h1 id="gradle上手操作"><a href="#gradle上手操作" class="headerlink" title="gradle上手操作"></a>gradle上手操作</h1><blockquote>
<p>这里用的是idea创建项目,如下图创建gradle项目,流程和使用<code>maven</code>基本一样<br><a href="https://imgchr.com/i/ye66ts"><img src="https://s3.ax1x.com/2021/02/01/ye66ts.png" alt="ye66ts.png"></a><br>创建完成后的界面如下,编写基本的<code>groovy</code>脚本<br><a href="https://imgchr.com/i/yecK4s"><img src="https://s3.ax1x.com/2021/02/01/yecK4s.png" alt="yecK4s.png"></a><br><code>build.gradle</code>文件就是整个项目的配置文件,相当于maven构建的<code>pom.xml</code>的配置<br>详细配置如下</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">group &#x27;com.hsl&#x27;</span><br><span class="line">version &#x27;1.0-SNAPSHOT&#x27;</span><br><span class="line"></span><br><span class="line">allprojects &#123;</span><br><span class="line">    apply plugin: &#x27;java&#x27;</span><br><span class="line">    apply plugin: &#x27;war&#x27;</span><br><span class="line">    sourceCompatibility = 1.8</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">repositories &#123;</span><br><span class="line">    maven &#123;</span><br><span class="line">        url &#x27;http://maven.aliyun.com/nexus/content/groups/public/&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">    mavenCentral()</span><br><span class="line">    //mavenLocal()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    testRuntime group: &#x27;junit&#x27;, name: &#x27;junit&#x27;, version: &#x27;4.12&#x27;</span><br><span class="line">    compile(&#x27;ch.qos.logback:logback-classic:1.2.1&#x27;)</span><br><span class="line">    compile group: &#x27;org.hibernate&#x27;, name: &#x27;hibernate-core&#x27;, version: &#x27;3.6.3.Final&#x27;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">def createDir = &#123;</span><br><span class="line">    path -&gt;</span><br><span class="line">        File dir = new File(path);</span><br><span class="line">        if(!dir.exists())&#123;</span><br><span class="line">            dir.mkdirs();</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">task makeWebDir()&#123;</span><br><span class="line">    def paths = [&#x27;src/main/webapp&#x27;];</span><br><span class="line">    doFirst &#123;</span><br><span class="line">        paths.forEach(createDir);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>下面介绍里面的语法含义:</p>
<blockquote>
<ul>
<li><code>group</code>,<code>version</code>即组名,版本号</li>
<li><code>allprojects</code>这里指全局模块使用</li>
<li><code>apply plugin</code>使用如下的插件,java打包,war打包</li>
<li><code>repositories</code>使用的中央仓库,使用时按顺序选择使用私服仓库还是中央仓库</li>
<li><code>dependencies</code>项目中用到的依赖<br>可以定义一个闭包来执行相应的任务,如下:</li>
</ul>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def createDir = &#123;</span><br><span class="line">    path -&gt;</span><br><span class="line">        File dir = new File(path);</span><br><span class="line">        if(!dir.exists())&#123;</span><br><span class="line">            dir.mkdirs();</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>定义一个task执行相应的自定义任务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">task makeWebDir()&#123;</span><br><span class="line">    def paths = [&#x27;src/main/webapp&#x27;];</span><br><span class="line">    doFirst &#123;</span><br><span class="line">        paths.forEach(createDir);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>简单的遍历创建一个webapp项目文件夹<br>idea右侧加载后就可以显示加载的依赖和创建的任务<br>在<code>Tasks</code>下</p>
<blockquote>
<p>这就是<code>gradle</code>的简单使用,更高级的语法使用后面去补充了解<br>……</p>
</blockquote>
]]></content>
      <categories>
        <category>technology</category>
      </categories>
      <tags>
        <tag>gradle</tag>
      </tags>
  </entry>
  <entry>
    <title>重拾计算机网络(一)</title>
    <url>/2023/10/07/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C(%E4%B8%80)/</url>
    <content><![CDATA[<blockquote>
<p>大学学的都已经还给老师了, 现在重新捡起来, 巩固下底层网络的知识。</p>
</blockquote>
<h1 id="基础篇"><a href="#基础篇" class="headerlink" title="基础篇"></a>基础篇</h1><h2 id="1-OSI七层模型"><a href="#1-OSI七层模型" class="headerlink" title="1. OSI七层模型"></a>1. OSI七层模型</h2><h2 id="2-Linux网络协议栈"><a href="#2-Linux网络协议栈" class="headerlink" title="2. Linux网络协议栈"></a>2. Linux网络协议栈</h2><h2 id="3-Linux接收网络包过程"><a href="#3-Linux接收网络包过程" class="headerlink" title="3. Linux接收网络包过程"></a>3. Linux接收网络包过程</h2>]]></content>
      <categories>
        <category>technology</category>
      </categories>
      <tags>
        <tag>网络</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
</search>
